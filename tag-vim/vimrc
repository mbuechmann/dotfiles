set softtabstop=2 expandtab shiftwidth=2 smarttab

set hlsearch

set nocompatible              " be iMproved, required
filetype off                  " required
set backspace=indent,eol,start " fix backspaces in iterm"

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

Bundle 'gmarik/Vundle.vim'
" EditorConfig plugin for Vim
Bundle 'editorconfig/editorconfig-vim'
" Next generation completion framework after neocomplcache
Bundle 'Shougo/neocomplete.vim'
" Tern-based JavaScript editing support
Bundle "marijnh/tern_for_vim"
" provides insert mode auto-completion for quotes, parens, brackets, etc.
Bundle 'Raimondi/delimitMate'
" Enhanced JavaScript Syntax for Vim
Bundle 'jelera/vim-javascript-syntax'
" Vastly improved Javascript indentation and syntax support in Vim
Bundle 'pangloss/vim-javascript'
" React JSX syntax highlighting and indenting for vim
Bundle 'mxw/vim-jsx'
" A Vim plugin for visually displaying indent levels in code
Bundle 'nathanaelkane/vim-indent-guides'
" quoting/parenthesizing made simple
Bundle 'tpope/vim-surround'
" Vim plugin for the_silver_searcher
Bundle 'rking/ag.vim'
" Slim syntax highlighting
Bundle 'onemanstartup/vim-slim'
" Markdown Vim Mode
Bundle 'plasticboy/vim-markdown'
" wisely add "end" in ruby, endfunction/endif/more in vim script, etc
Bundle 'tpope/vim-endwise.git'
" A Vim plugin which shows a git diff in the gutter (sign column) and stages/reverts hunks.
Bundle 'airblade/vim-gitgutter'
" A Git wrapper so awesome, it should be illegal
Bundle 'tpope/vim-fugitive'
" Fuzzy file, buffer, mru, tag, etc finder
Bundle 'ctrlpvim/ctrlp.vim'
" explore your filesystem and to open files and directories
Bundle 'scrooloose/nerdtree'
" A plugin of NERDTree showing git status
Bundle 'Xuyuanp/nerdtree-git-plugin'
" NERDTree and tabs together in Vim, painlessly
Bundle 'jistr/vim-nerdtree-tabs'
" lean & mean status/tabline for vim that's light as air
Bundle 'bling/vim-airline'
" highlight all trailing whitespaces
Bundle 'ntpeters/vim-better-whitespace'
" class outline viewer for Vim
Bundle 'majutsushi/tagbar'
" unload, delete or wipe a buffer without closing the window or split
Bundle 'qpkorr/vim-bufkill'
" Vim syntax highlighting for Ace templates
Bundle 'yosssi/vim-ace'
" Go development plugin for Vim
Bundle 'fatih/vim-go'
" Go Explorer is Vim plugin for exploring Go code
Bundle 'garyburd/go-explorer'
" Ruby on Rails power tools
Bundle 'tpope/vim-rails'
" Display the indention levels with thin vertical lines
Bundle 'Yggdroot/indentLine'
" Open files in a given line
Bundle 'bogado/file-line'
" Add highlighting and fix indentation for ansible yml files
Bundle 'chase/vim-ansible-yaml'
" Lua file type plugin
Bundle 'xolox/vim-misc'
Bundle 'xolox/vim-lua-ftplugin'
" comment stuff out
Bundle 'tpope/vim-commentary'
" emmet for vim
Bundle 'mattn/emmet-vim'
" Vim syntax file & snippets for Docker's Dockerfile
Bundle 'ekalinin/Dockerfile.vim'

call vundle#end()            " required
filetype plugin indent on    " required

let g:vim_markdown_folding_disabled=2

let g:jsx_ext_required = 0 " Enable jsx highlighting in js files

" CtrlP config
let g:ctrlp_custom_ignore = {
    \ 'dir':  '\v[\/]\.(git|hg|svn)$',
    \ 'file': '\v\.(exe|so|dll)$',
    \ }

if executable('ag')
    set grepprg=ag\ --nogroup\ --nocolor
    let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'
    let g:ctrlp_use_caching = 0
endif

" Custom keybindings
nmap <Tab><Tab> :NERDTreeTabsToggle<CR>
nmap <Ctrl-p> :CtrlP .
nmap <F8> :TagbarToggle<CR>
nmap <C-\> :NERDTreeFind<CR>

set t_Co=256
syntax on
set background=dark
colorscheme gruvbox

set number  " show linenumbers
set list    " show whitespaces
set mouse=a " Enable mouse selection in terminal
set hidden  " leave unsaved buffers

let g:neocomplete#enable_at_startup = 1

let g:airline#extensions#tabline#enabled = 1 " Enable the list of buffers
let g:airline#extensions#tabline#fnamemod = ':t' " Show just the filename

let g:NERDTreeWinSize=40
let g:nerdtree_tabs_open_on_console_startup = 1
let g:nerdtree_tabs_smart_startup_focus = 2

" autocomplete for love2d
function SetLovePrefs()
  setlocal dictionary-=~/.vim/love-dictionary/love.dict dictionary+=~/.vim/love-dictionary/love.dict
  setlocal iskeyword+=.
endfunction
autocmd FileType lua call SetLovePrefs()

" NERDTreeIndicator
let g:NERDTreeIndicatorMapCustom = {
    \ "Modified"  : "✹",
    \ "Staged"    : "✚",
    \ "Untracked" : "✭",
    \ "Renamed"   : "➜",
    \ "Unmerged"  : "═",
    \ "Deleted"   : "✖",
    \ "Dirty"     : "✗",
    \ "Clean"     : "✔︎",
    \ "Unknown"   : "?"
    \ }
